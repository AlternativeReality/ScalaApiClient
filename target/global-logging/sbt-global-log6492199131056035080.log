[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\vsmirnov\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\vsmirnov\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Amazon.com Inc. Java 1.8.0_302)
[debug]       Load.loadUnit: plugins took 296.7995ms
[debug]       Load.loadUnit: defsScala took 0.6198ms
[debug] [Loading] Scanning directory C:\Users\vsmirnov\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vsmirnov\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 32.1678 ms
[debug]           Load.resolveProject(global-plugins) took 66.5127ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\vsmirnov\.sbt\1.0\plugins, plugins: List(<none>))) took 138.8171ms
[debug] [Loading] Done in C:\Users\vsmirnov\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 170.2828ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5086ms
[debug]     Load.loadUnit(file:/C:/Users/vsmirnov/.sbt/1.0/plugins/, ...) took 481.0148ms
[debug]   Load.apply: load took 760.9184ms
[debug]   Load.apply: resolveProjects took 8.8949ms
[debug]   Load.apply: finalTransforms took 90.2498ms
[debug]   Load.apply: config.delegates took 13.829ms
[debug]   Load.apply: Def.make(settings)... took 749.7604ms
[debug]   Load.apply: structureIndex took 283.9466ms
[debug]   Load.apply: mkStreams took 6.3695ms
[info] loading global plugins from C:\Users\vsmirnov\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 21740.2298ms
[debug]           Load.loadUnit: plugins took 53.5627ms
[debug]           Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Users\vsmirnov\Documents\client\client\project
[debug]             Load.loadUnit: mkEval took 9.4406ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vsmirnov\Documents\client\client\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2917 ms
[info] loading settings for project client-build from plugins.sbt,idea1.sbt ...
[debug]               Load.resolveProject(client-build) took 4.1971ms
[debug]             Load.loadTransitive: finalizeProject(Project(id client-build, base: C:\Users\vsmirnov\Documents\client\client\project, plugins: List(<none>))) took 7.1556ms
[debug] [Loading] Done in C:\Users\vsmirnov\Documents\client\client\project, returning: (client-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4279.6345ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.4616ms
[debug]         Load.loadUnit(file:/C:/Users/vsmirnov/Documents/client/client/project/, ...) took 4342.0055ms
[debug]       Load.apply: load took 4344.148ms
[debug]       Load.apply: resolveProjects took 0.1432ms
[debug]       Load.apply: finalTransforms took 9.683ms
[debug]       Load.apply: config.delegates took 0.6844ms
[debug]       Load.apply: Def.make(settings)... took 97.9696ms
[debug]       Load.apply: structureIndex took 40.2232ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from C:\Users\vsmirnov\Documents\client\client\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 7053.8438ms
[debug]     Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\Users\vsmirnov\Documents\client\client
[debug]       Load.loadUnit: mkEval took 0.4251ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vsmirnov\Documents\client\client, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.9738 ms
[info] loading settings for project client from build.sbt ...
[debug]         Load.resolveProject(client) took 49.4263ms
[debug]       Load.loadTransitive: finalizeProject(Project(id client, base: C:\Users\vsmirnov\Documents\client\client, plugins: List(<none>))) took 54.0656ms
[debug] [Loading] Done in C:\Users\vsmirnov\Documents\client\client, returning: (client)
[debug]     Load.loadUnit: loadedProjectsRaw took 4977.2515ms
[debug]     Load.loadUnit: cleanEvalClasses took 43.2384ms
[debug]   Load.loadUnit(file:/C:/Users/vsmirnov/Documents/client/client/, ...) took 12075.7514ms
[debug] Load.apply: load took 12079.0089ms
[debug] Load.apply: resolveProjects took 0.176ms
[debug] Load.apply: finalTransforms took 42.3007ms
[debug] Load.apply: config.delegates took 0.4522ms
[debug] Load.apply: Def.make(settings)... took 107.6691ms
[debug] Load.apply: structureIndex took 33.2626ms
[debug] Load.apply: mkStreams took 0.0035ms
[info] set current project to client (in build file:/C:/Users/vsmirnov/Documents/client/client/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 9699 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 9699, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to client (in build file:/C:/Users/vsmirnov/Documents/client/client/)
[debug] > Exec(idea-shell, None, None)
